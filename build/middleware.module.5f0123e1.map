{"version":3,"sources":["../constants/middleware.ts","../pages/middleware/index.ts","../modules/middleware.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,CAAC,IAAM,cAAc,GAAG,cAAM,OAAA;IAChC;QACE,EAAE,EAAE,YAAY;QAChB,CAAC,EAAE;YACD,oGAAoG;YACpG,8CAA8C;YAC9C,mDAAmD;SACpD;QACD,IAAI,EAAE;YACJ;gBACE,KAAK,EAAE,KAAK;gBACZ,CAAC,EAAE;oBACD,+EAA+E;oBAC/E,qCAAqC;oBACrC,qCAAqC;oBACrC,qBAAqB;iBACtB;gBACD,MAAM,EAAE;oBACN,4CAA4C;oBAC5C,+BAA+B;oBAC/B,oCAAoC;oBACpC,oDAAoD;oBACpD,yCAAyC;oBACzC,gCAAgC;oBAChC,wCAAwC;oBACxC,qDAAqD;oBACrD,4DAA4D;oBAC5D,oFAAoF;oBACpF,uFAAuF;iBACxF;aACF;YACD;gBACE,KAAK,EAAE,MAAM;AChCvB,OAAO,SDiCG,KCjCW,CDiCL,ACjCM,EDiCJ;AC/BlB,oBDgCY,iBChCyB,iDDgCyC;AC/B9E,OAAO,EAAE,SAAS,EDgCN,AChCQ,MAAM,gBDgCQ,OChCe,CAAC;AAClD,iBDgCW,sCChC4C;AAEvD,OAAO,EAAE,ID+BA,UC/Bc,EAAE,MAAM,4BAA4B,CAAC;AAyC5D,SDTO;ICWH,CDVC;CACF,EAxCiC,CAwCjC,CAAC,GCUI,IAAI,CAAC,KAAK,GAAG;YACT,IAAI,EAAE,cAAc,EAAE;YACtB,QAAQ,EAAE,YAAY;SACzB,CAAC;IACN,CAAC;IAPgB,mBAAmB;QAnBvC,SAAS,CAAQ;YACd,QAAQ,EAAE,sBAAsB;YAChC,QAAQ,EAAE,CAAC,wvBAeV,CAAC;SACL,CAAC;;OACmB,mBAAmB,CAQvC;IAAD,0BAAC;CARD,AAQC,IAAA;eARoB,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;AC/CxC,oCAAoC;AACpC,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAC9C,mDAAmD;AAEnD,OAAO,mBAAmB,MAAM,qBAAqB,CAAC;AAWtD;IAAA;IAAwC,CAAC;IAApB,gBAAgB;QATpC,QAAQ,CAAC;YACN,UAAU,EAAE;gBACV,mBAAmB;aACpB;YACD,OAAO,EAAE;gBACP,mBAAmB;aACpB;YACD,SAAS,EAAE,mBAAmB;SACjC,CAAC;OACmB,gBAAgB,CAAI;IAAD,uBAAC;CAAzC,AAAyC,IAAA;eAApB,gBAAgB","file":"middleware.module.5f0123e1.map","sourceRoot":"../public","sourcesContent":["export const middlewareInfo = () => [\n    {\n      h1: '中间件 及 其他开发',\n      p: [\n        '中间件是一个在 InDiv 挂载根模块（bootstrapModule(NvModule: Function): void;）之后初始化程序（init: () => void;）之前被调用的对象。',\n        '中间件接收 InDiv 实例上的全部属性及方法，因此中间件可以修改 InDiv 的行为。',\n        '插件可以是 InDiv模块（NvModule），也可以就是一个可以提供给providers的服务。',\n      ],\n      info: [\n        {\n          title: '中间件',\n          p: [\n            '中间件应该是一个类型为 interface IMiddleware<InDiv> { bootstrap(vm: InDiv): void; } 的对象。',\n            '中间件对象应有 bootstrap 方法，接收整个 InDiv 实例。',\n            '可以通过修改 InDiv 实例上的全部属性及方法，改变整个应用的行为。',\n            'InDiv 实例会暴露如下方法及属性：',\n          ],\n          pchild: [\n            '1. modalList: IMiddleware<InDiv>[]; 中间件的列表',\n            '2. rootDom: Element; 挂载在页面的元素',\n            '3. $rootPath: string; 根地址，提供给路由器使用',\n            '4. $canRenderModule: boolean; 可否渲染根模块提供的 bootstrap',\n            '5. $routeDOMKey: string; 挂载路由的元素tagName',\n            '6. $rootModule: INvModule; 根模块',\n            '7. $components: Function[]; 根模块暴露出的组件类',\n            '8. setRootPath: (rootPath: string) => void; 更改设置根地址',\n            '9. bootstrapModule: (NvModule: Function) => void; 引导初始化根模块',\n            '10. v1.2.1新增: render() => Promise<IComponent>; 组件初次异步渲染的方法，返回一个Promise<IComponent>',\n            '11. v1.2.1新增: reRender() => Promise<IComponent>; 组件非初次异步渲染的方法，返回一个Promise<IComponent>',\n          ],\n        },\n        {\n          title: '其他开发',\n          pchild: [\n            '可以提供模块（NvModule），在 exports: Function[] 中导出提供给开发者的组件，并像普通的模块一样使用。',\n            '也可以提供服务，并像普通的服务一样使用。',\n          ],\n        },\n      ],\n    },\n  ];\n  \n",null,"// import { NvModule } from 'indiv';\nimport { NvModule } from '../../../InDiv/src';\n// import { NvModule } from '../../../InDiv/build';\n\nimport MiddlewareContainer from '../pages/middleware';\n\n@NvModule({\n    components: [\n      MiddlewareContainer,\n    ],\n    exports: [\n      MiddlewareContainer,\n    ],\n    bootstrap: MiddlewareContainer,\n})\nexport default class MiddlewareModule { }\n"]}