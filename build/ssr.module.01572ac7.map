{"version":3,"sources":["../constants/ssr.ts","../pages/ssr/index.ts","../modules/ssr.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,CAAC,IAAM,OAAO,GAAG,cAAM,OAAA;IACzB;QACE,EAAE,EAAE,YAAY;QAChB,CAAC,EAAE;YACD,uBAAuB;YACvB,8CAA8C;YAC9C,4CAA4C;YAC5C,aAAa;YACb,8BAA8B;SAC/B;QACD,IAAI,EAAE;YACJ;gBACE,KAAK,EAAE,MAAM;gBACb,CAAC,EAAE;oBACD,mCAAmC;oBACnC,2DAA2D;oBAC3D,sEAAsE;oBACtE,6DAA6D;oBAC7D,sDAAsD;oBACtD,wBAAwB;iBACzB;gBACD,MAAM,EAAE;oBACN,kDAAkD;oBAClD,+DAA+D;oBAC/D,sCAAsC;iBACvC;aACF;YACD;gBACE,KAAK,EAAE,OAAO;gBACd,CAAC,EAAE;oBACD,cAAc;oBACd,gBAAgB;oBAChB,8BAA8B;oBAC9B,+CAA+C;iBAChD;AClCX,OAAO,SDmCG,KCnCW,CDmCL,ACnCM,EDmCJ;ACjClB,oBDkCY,iBAAiB,AClCQ;AACrC,OAAO,EAAE,SAAS,EDkCN,AClCQ,MAAM,uBAAuB,CAAC,EDkCN;ACjC5C,oBDkCY,gBAAgB,mBClC2B;AAEvD,OAAO,EAAE,OAAO,EAAE,EDiCN,ICjCY,qBAAqB,CAAC,4EDiCoE;ACQlH,oBDPY,uEAAuE;ICS/E,gBDRQ,iCAAiC;QCSrC,IAAI,CAAC,IDRF,CCQO,GAAG;YACT,IDRF,ACQM,EAAE,EDRJ,EAAE,GCQS,EAAE,2gBDYtB;YCXO,CDYH,OCZW,EAAE,YAAY;SDa3B,ACZE,CAAC;IACN,CDYC,ACZA;CDaF,EAnE0B,CAmE1B,ACpBkB,CDoBjB,WCpB6B;QAnBhC,SAAS,CAAQ;YACd,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,CAAC,wvBAeV,CAAC;SACL,CAAC;;OACmB,YAAY,CAQhC;IAAD,mBAAC;CARD,AAQC,IAAA;eARoB,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;AC/CjC,oCAAoC;AACpC,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAC9C,mDAAmD;AAEnD,OAAO,YAAY,MAAM,cAAc,CAAC;AAWxC;IAAA;IAAgC,CAAC;IAAZ,SAAS;QAT7B,QAAQ,CAAC;YACN,UAAU,EAAE;gBACR,YAAY;aACf;YACD,OAAO,EAAE;gBACL,YAAY;aACf;YACD,SAAS,EAAE,YAAY;SAC1B,CAAC;OACmB,SAAS,CAAG;IAAD,gBAAC;CAAjC,AAAiC,IAAA;eAAZ,SAAS","file":"ssr.module.01572ac7.map","sourceRoot":"../public","sourcesContent":["export const ssrInfo = () => [\n    {\n      h1: '服务端渲染（SSR）',\n      p: [\n        '标准的 InDiv 应用会运行在浏览器中，',\n        '当 JavaScript 脚本加载完毕后，它会在 DOM 中渲染页面，以响应用户的操作。',\n        '但是在特殊场景，比如 SEO，需要提升在低性能设备上的渲染速度，需要迅速显示首屏时，',\n        '可能服务端渲染更适合。',\n        '它可以生成这些页面，并在浏览器请求时直接用它们给出响应。',\n      ],\n      info: [\n        {\n          title: '工作原理',\n          p: [\n            '通过引入 @indiv/ssr-renderer v1.1.0+。',\n            '@indiv/ssr-renderer 包提供了服务端的 DOM 实现，使得渲染 InDiv 应用不再依赖浏览器。',\n            '通过 node 端，会把客户端对应用页面的请求传给 @indiv/ssr-renderer 中的 renderToString  函数，',\n            '引入 indiv 实例和路由的配置对象，renderToString 会根据对应的路径，返回已经被渲染完的字符串模板。',\n            '通过不同框架的渲染机制，将返回的字符串模板渲染到模板的 <div id=\"root\"></div> 中。',\n            '最后，服务器就会把渲染好的页面返回给客户端。',\n          ],\n          pchild: [\n            '1. 生命周期受到限制，服务端渲染中仅仅支持 constructor 和 OnInit 的调用。',\n            '2. 因为 InDiv 的 nvHttp 对象是封装的 axios 库，因此支持在 node 环境中使用 http 请求。',\n            '3. 通过 nv-on:eventName 方式绑定的方法暂时无法渲染。',\n          ],\n        },\n        {\n          title: '环境及使用',\n          p: [\n            'Node.js: v6+',\n            'indiv: v1.2.0+',\n            '@indiv/ssr-renderer: v1.1.0+',\n            '本例子使用 express 及 ejs 模板，你也可以选择适合的 服务端框架 及 模板 。',\n          ],\n          pchild: [\n            '1. 创建 InDiv app',\n            '2. 创建一个用于处理请求的 express Web 服务器',\n            '3. 创建一个 ejs 模板',\n            '4. 引入 @indiv/ssr-renderer 包 renderToString: (url: string, routes: TRouter[], indiv: InDiv) => string',\n            '5. 将 request 的 url， indiv app路由配置对象，和 indiv实例 作为参数依次传入 renderToString',\n            '6. 最后 renderToString 的返回值渲染至模板中',\n          ],\n          code: `\n  // in index.ejs\n  <div id=\"root\">\n    <%- content %>\n  </div>\n\n  // in service side\n  const express = require('express');\n  const renderToString = require('@indiv/ssr-renderer');\n\n  const app = express();\n\n  app.use('/indiv-doc', (request, response, next) => {    \n    // import indiv app\n    const ssrData = require('./dist/main.js');\n    response.render('index.ejs', {\n      // use in ejs template\n      content: renderToString(request.url, ssrData.routes, ssrData.default.inDiv),\n    });\n  });\n    `,\n        },\n      ],\n    },\n  ];\n  \n",null,"// import { NvModule } from 'indiv';\nimport { NvModule } from '../../../InDiv/src';\n// import { NvModule } from '../../../InDiv/build';\n\nimport SSRContainer from '../pages/ssr';\n\n@NvModule({\n    components: [\n        SSRContainer,\n    ],\n    exports: [\n        SSRContainer,\n    ],\n    bootstrap: SSRContainer,\n})\nexport default class SSRModule {}\n"]}