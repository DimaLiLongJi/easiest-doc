{"version":3,"sources":["../constants/middleware.ts","../pages/middleware/index.ts","../modules/middleware.module.ts"],"names":[],"mappings":";;;AAAA,mCAEU,QAAY,aAAA,QACf,gCAEC,QAED,iBACD,CAAA,yHAEgB,+CAAA,2JAG2B,sCAAA,sCAAA,4EACA,gCAAA,qCAAA,qDAAA,0CAAA,iCAAA,yCAAA,sDAAA,6DAAA,qFAAA,mLAG/B,oDAKN;;mHCtBZ,IAAA,EAAO,QAAA,yBAGP,EAAkB,QAAQ,8BAG1B,SAAS,EAAA,GAAmD,OAAA,EAA7B,mBAAA,QAA6B,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,OA2CxD,EAAA,SAAA,EAAA,EAAA,EAAA,WACI,UAAU,WACN,EAAK,EAAkB,OAAhB,EAAgB,EAAA,OAAA,yBAAA,EAAA,GAAA,KAEzB,YAAA,oBAAA,QAAA,YAAA,EAAA,WAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KACL,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,UA1BJ,EAAA,GAAiB,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,KAkBhB,SAAA,EAAA,yIACF;;2FC9CA,IAAA,EAAS,QAAU,sBAGnB,EAAO,EAAyB,QAAA,iCAWhC,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,YAAqB,EAAA,GAAgB,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,SARrB,SAAA,EAAA,EAAA,EAAA,qBACV,WACD,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAEoB,YAAnB,4BAAmB,YAAA,EAAA,WAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SACpB,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,UAEJ,EAAC,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA","file":"middleware.module.e56f27e8.map","sourceRoot":"public","sourcesContent":["export const middlewareInfo = () => [\n    {\n      h1: '中间件 及 其他开发',\n      p: [\n        '中间件是一个在 InDiv 挂载根模块（bootstrapModule(NvModule: Function): void;）之后初始化程序（init: () => void;）之前被调用的对象。',\n        '中间件接收 InDiv 实例上的全部属性及方法，因此中间件可以修改 InDiv 的行为。',\n        '插件可以是 InDiv模块（NvModule），也可以就是一个可以提供给providers的服务。',\n      ],\n      info: [\n        {\n          title: '中间件',\n          p: [\n            '中间件应该是一个类型为 interface IMiddleware<InDiv> { bootstrap(vm: InDiv): void; } 的对象。',\n            '中间件对象应有 bootstrap 方法，接收整个 InDiv 实例。',\n            '可以通过修改 InDiv 实例上的全部属性及方法，改变整个应用的行为。',\n            'InDiv 实例会暴露如下方法及属性：',\n          ],\n          pchild: [\n            '1. modalList: IMiddleware<InDiv>[]; 中间件的列表',\n            '2. rootDom: Element; 挂载在页面的元素',\n            '3. $rootPath: string; 根地址，提供给路由器使用',\n            '4. $canRenderModule: boolean; 可否渲染根模块提供的 bootstrap',\n            '5. $routeDOMKey: string; 挂载路由的元素tagName',\n            '6. $rootModule: INvModule; 根模块',\n            '7. $components: Function[]; 根模块暴露出的组件类',\n            '8. setRootPath: (rootPath: string) => void; 更改设置根地址',\n            '9. bootstrapModule: (NvModule: Function) => void; 引导初始化根模块',\n            '10. v1.2.1新增: render() => Promise<IComponent>; 组件初次异步渲染的方法，返回一个Promise<IComponent>',\n            '11. v1.2.1新增: reRender() => Promise<IComponent>; 组件非初次异步渲染的方法，返回一个Promise<IComponent>',\n          ],\n        },\n        {\n          title: '其他开发',\n          pchild: [\n            '可以提供模块（NvModule），在 exports: Function[] 中导出提供给开发者的组件，并像普通的模块一样使用。',\n            '也可以提供服务，并像普通的服务一样使用。',\n          ],\n        },\n      ],\n    },\n  ];\n  \n",null,"// import { NvModule } from 'indiv';\nimport { NvModule } from '../../../InDiv/src';\n// import { NvModule } from '../../../InDiv/build';\n\nimport MiddlewareContainer from '../pages/middleware';\n\n@NvModule({\n  declarations: [\n      MiddlewareContainer,\n    ],\n  exports: [\n      MiddlewareContainer,\n    ],\n  bootstrap: MiddlewareContainer,\n})\nexport default class MiddlewareModule { }\n"]}